{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { Utils } from '../core/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/project.service\";\nimport * as i2 from \"@angular/material/table\";\nimport * as i3 from \"@angular/router\";\nfunction ProjectListComponent_mat_header_cell_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-cell\");\n  }\n}\nfunction ProjectListComponent_mat_cell_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\")(1, \"div\")(2, \"a\", 8)(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const project_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/project/\", project_r4.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r4.name);\n  }\n}\nfunction ProjectListComponent_mat_header_row_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\nfunction ProjectListComponent_mat_row_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\nexport let ProjectListComponent = /*#__PURE__*/(() => {\n  class ProjectListComponent {\n    constructor(_projectService) {\n      this._projectService = _projectService;\n      this.displayedColumns = [\"name\"];\n      this.dataSource = new MatTableDataSource();\n    }\n    ngOnInit() {\n      this._projectService.getProjects().subscribe(projects => {\n        this.projects = projects;\n        this.dataSource.data = projects;\n      }, error => Utils.formatError(error));\n    }\n  }\n  ProjectListComponent.ɵfac = function ProjectListComponent_Factory(t) {\n    return new (t || ProjectListComponent)(i0.ɵɵdirectiveInject(i1.ProjectService));\n  };\n  ProjectListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectListComponent,\n    selectors: [[\"app-projects\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[2, \"color\", \"red\"], [1, \"table-container\", \"mat-elevation-z8\"], [3, \"dataSource\"], [\"matColumnDef\", \"name\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"routerLink\"]],\n    template: function ProjectListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"mat-table\", 2);\n        i0.ɵɵelementContainerStart(4, 3);\n        i0.ɵɵtemplate(5, ProjectListComponent_mat_header_cell_5_Template, 1, 0, \"mat-header-cell\", 4);\n        i0.ɵɵtemplate(6, ProjectListComponent_mat_cell_6_Template, 5, 2, \"mat-cell\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(7, ProjectListComponent_mat_header_row_7_Template, 1, 0, \"mat-header-row\", 6);\n        i0.ɵɵtemplate(8, ProjectListComponent_mat_row_8_Template, 1, 0, \"mat-row\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow, i3.RouterLink],\n    encapsulation: 2\n  });\n  return ProjectListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}