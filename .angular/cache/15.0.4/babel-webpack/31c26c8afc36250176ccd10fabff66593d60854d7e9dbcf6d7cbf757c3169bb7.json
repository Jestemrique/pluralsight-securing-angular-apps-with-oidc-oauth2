{"ast":null,"code":"import { Constants } from '../constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProjectService = /*#__PURE__*/(() => {\n  class ProjectService {\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n    }\n    getProjects() {\n      return this._httpClient.get(Constants.apiRoot + 'Projects');\n    }\n    getProject(projectId) {\n      return this._httpClient.get(Constants.apiRoot + 'Projects/' + projectId);\n    }\n    getProjectUsers(projectId) {\n      return this._httpClient.get(Constants.apiRoot + 'Projects/' + projectId + '/Users');\n    }\n    addProject(project) {\n      return this._httpClient.post(Constants.apiRoot + 'Projects', project);\n    }\n    deleteProject(project) {\n      return this._httpClient.delete(Constants.apiRoot + 'Projects/' + project.id);\n    }\n    addUserPermission(userPermission) {\n      return this._httpClient.post(Constants.apiRoot + 'UserPermissions', userPermission);\n    }\n    removeUserPermission(userId, projectId) {\n      return this._httpClient.delete(`${Constants.apiRoot}UserPermissions/?userId=${userId}&projectId=${projectId}`);\n    }\n    updateUserPermission(userPermission) {\n      return this._httpClient.put(`${Constants.apiRoot}UserPermissions`, userPermission);\n    }\n    getMilestones(projectId) {\n      return this._httpClient.get(Constants.apiRoot + 'Milestone');\n    }\n    getMilestoneStatuses() {\n      return this._httpClient.get(`${Constants.apiRoot}Projects/MilestoneStatuses`);\n    }\n    addMilestone(milestone) {\n      return this._httpClient.post(`${Constants.apiRoot}Projects/Milestones`, milestone);\n    }\n    deleteMilestone(id) {\n      return this._httpClient.delete(`${Constants.apiRoot}Projects/Milestones/${id}`);\n    }\n    updateMilestone(milestone) {\n      return this._httpClient.put(`${Constants.apiRoot}Projects/Milestones/${milestone.id}`, milestone);\n    }\n  }\n  ProjectService.ɵfac = function ProjectService_Factory(t) {\n    return new (t || ProjectService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProjectService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjectService,\n    factory: ProjectService.ɵfac\n  });\n  return ProjectService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}