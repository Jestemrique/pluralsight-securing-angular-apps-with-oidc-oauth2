{"ast":null,"code":"import { CoreModule } from './core.module';\nimport { UserManager } from 'oidc-client';\nimport { Constants } from '../constants';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this._loginChangedSubject = new Subject();\n      this.loginChanged = this._loginChangedSubject.asObservable();\n      const stsSettings = {\n        authority: Constants.stsAuthority,\n        client_id: Constants.clientId,\n        redirect_uri: `${Constants.clientRoot}signin-callback`,\n        scope: 'openid profile projects-api',\n        response_type: 'code',\n        //post_logout_redirect_uri: `${Constants.clientRoot}signout-callback` ,\n        metadata: {\n          issuer: `${Constants.stsAuthority}`,\n          authorization_endpoint: `${Constants.stsAuthority}authorize?audience=projects-api`,\n          jwks_uri: `${Constants.stsAuthority}.well-known/jwks.json`,\n          token_endpoint: `${Constants.stsAuthority}oauth/token`,\n          userinfo_endpoint: `${Constants.stsAuthority}userinfo`,\n          end_session_endpoint: `${Constants.stsAuthority}v2/logout?client_id=${Constants.clientId}&returnTo=${encodeURI(Constants.clientRoot)}signout-callback`\n        }\n      };\n      this._userManager = new UserManager(stsSettings);\n    }\n    login() {\n      return this._userManager.signinRedirect();\n    }\n    isLoggedIn() {\n      return this._userManager.getUser().then(user => {\n        const userCurrent = !!user && !user.expired;\n        if (this._user !== user) {\n          this._loginChangedSubject.next(userCurrent);\n        }\n        this._user = user;\n        return userCurrent;\n      });\n    }\n    completeLogin() {\n      return this._userManager.signinRedirectCallback().then(user => {\n        this._user = user;\n        this._loginChangedSubject.next(!!user && !user.expired);\n        return user;\n      });\n    }\n    logout() {\n      this._userManager.signoutRedirect();\n    }\n    completeLogout() {\n      this._user = null;\n      return this._userManager.signoutRedirectCallback();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: CoreModule\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}